"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var CleanAppCommandBase = (function () {
    function CleanAppCommandBase($options, $platformService) {
        this.$options = $options;
        this.$platformService = $platformService;
    }
    CleanAppCommandBase.prototype.execute = function (args) {
        var platform = args[0].toLowerCase();
        return this.$platformService.cleanDestinationApp(platform);
    };
    return CleanAppCommandBase;
}());
exports.CleanAppCommandBase = CleanAppCommandBase;
var CleanAppIosCommand = (function (_super) {
    __extends(CleanAppIosCommand, _super);
    function CleanAppIosCommand($options, $platformsData, $platformService) {
        _super.call(this, $options, $platformService);
        this.$options = $options;
        this.$platformsData = $platformsData;
        this.allowedParameters = [];
    }
    CleanAppIosCommand.prototype.execute = function (args) {
        return _super.prototype.execute.call(this, [this.$platformsData.availablePlatforms.iOS]);
    };
    return CleanAppIosCommand;
}(CleanAppCommandBase));
exports.CleanAppIosCommand = CleanAppIosCommand;
$injector.registerCommand("clean-app|ios", CleanAppIosCommand);
var CleanAppAndroidCommand = (function (_super) {
    __extends(CleanAppAndroidCommand, _super);
    function CleanAppAndroidCommand($options, $platformsData, $errors, $platformService) {
        _super.call(this, $options, $platformService);
        this.$options = $options;
        this.$platformsData = $platformsData;
        this.$errors = $errors;
        this.allowedParameters = [];
    }
    CleanAppAndroidCommand.prototype.execute = function (args) {
        return _super.prototype.execute.call(this, [this.$platformsData.availablePlatforms.Android]);
    };
    return CleanAppAndroidCommand;
}(CleanAppCommandBase));
exports.CleanAppAndroidCommand = CleanAppAndroidCommand;
$injector.registerCommand("clean-app|android", CleanAppAndroidCommand);
